{"version":3,"sources":["component/Weather.js","component/Form.js","App.js","reportWebVitals.js","index.js"],"names":["Weather","props","className","country","city","tempreature","humidity","description","error","Form","onSubmit","getWeather","type","name","placeholder","API_KEY","App","state","e","a","preventDefault","target","elements","value","fetch","api","json","data","console","log","setState","main","temp","sys","weather","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gRA8BeA,EA5BC,SAACC,GACb,OACE,sBAAKC,UAAU,cAAf,UAEID,EAAME,SAAW,2CAAcF,EAAME,WAGrCF,EAAMG,MAAQ,wCAAWH,EAAMG,QAG/BH,EAAMI,aAAe,gDAAmBJ,EAAMI,YAAzB,QAGrBJ,EAAMK,UAAY,4CAAeL,EAAMK,YAGvCL,EAAMM,aAAe,+CAAkBN,EAAMM,eAG7CN,EAAMO,OAAS,yCAAYP,EAAMO,aCJ5BC,EAfF,SAACR,GACV,OACE,qBAAKC,UAAU,WAAf,SACE,uBAAMQ,SAAUT,EAAMU,WAAtB,UACE,uBAAOC,KAAK,OAAOC,KAAK,UAAUC,YAAY,gBAC9C,uBAAOF,KAAK,OAAOC,KAAK,OAAOC,YAAY,aAC3C,yDCDJC,EAAU,mCAIVC,E,4MAEJC,MAAQ,CACNZ,YAAY,GACZD,KAAK,GACLD,QAAQ,GACRG,SAAS,GACTC,YAAY,GACZC,MAAM,I,EAIRG,W,uCAAa,WAAOO,GAAP,qBAAAC,EAAA,6DAEXD,EAAEE,iBACIhB,EAAOc,EAAEG,OAAOC,SAASlB,KAAKmB,MAC9BpB,EAAUe,EAAEG,OAAOC,SAASnB,QAAQoB,MAJ/B,SAKOC,MAAM,oDAAD,OAAqDpB,EAArD,cAA+DD,EAA/D,kBAAgFY,IAL5F,cAKLU,EALK,gBAMQA,EAAIC,OANZ,OAMLC,EANK,OAOXC,QAAQC,IAAIF,GAETvB,GAAQD,EACT,EAAK2B,SAAS,CACZzB,YAAasB,EAAKI,KAAKC,KACvB5B,KAAMuB,EAAKd,KACXV,QAASwB,EAAKM,IAAI9B,QAClBG,SAAUqB,EAAKI,KAAKzB,SACpBC,YAAaoB,EAAKO,QAAQ,GAAG3B,YAC7BC,MAAM,KAGR,EAAKsB,SAAS,CACZzB,YAAY,GACZD,KAAK,GACLD,QAAQ,GACRG,SAAS,GACTC,YAAY,GACZC,MAAM,gCAzBC,4C,kGAgCb,WACE,OACE,qBAAKN,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,UACE,cAAC,EAAD,CAAMS,WAAYwB,KAAKxB,aACvB,cAAC,EAAD,CACEN,YAAe8B,KAAKlB,MAAMZ,YAC1BD,KAAO+B,KAAKlB,MAAMb,KAClBD,QAAUgC,KAAKlB,MAAMd,QACrBG,SAAW6B,KAAKlB,MAAMX,SACtBC,YAAc4B,KAAKlB,MAAMV,YACzBC,MAAQ2B,KAAKlB,MAAMT,iB,GAvDb4B,aA+DHpB,IC9DAqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8311f791.chunk.js","sourcesContent":["import React  from \"react\";\r\n\r\nconst Weather = (props) => {\r\n    return(\r\n      <div className=\"weather_com\">\r\n        { \r\n          props.country && <p>country : {props.country}</p> \r\n        }\r\n        { \r\n          props.city && <p>city : {props.city}</p> \r\n        }\r\n        { \r\n          props.tempreature && <p>tempreature :  {props.tempreature} F</p> \r\n        }\r\n        { \r\n          props.humidity && <p>humidity : {props.humidity}</p> \r\n        }\r\n        { \r\n          props.description && <p>description : {props.description}</p> \r\n        }\r\n        { \r\n          props.error && <p>Error : {props.error}</p> \r\n        }\r\n        \r\n      </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Weather;","import React from \"react\";\r\n\r\nconst Form = (props) => {\r\n    return(\r\n      <div className=\"form_com\">\r\n        <form onSubmit={props.getWeather}>\r\n          <input type=\"text\" name=\"country\" placeholder=\"Country ...\" />\r\n          <input type=\"text\" name=\"city\" placeholder=\"City ...\" />\r\n          <button> Get Weather </button>\r\n        </form>\r\n      </div>\r\n      \r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Form;","import React ,{Component} from \"react\";\r\nimport \"./App.css\";\r\n\r\nimport Weather from \"./component/Weather\";\r\nimport Form from \"./component/Form\";\r\n\r\n\r\nconst API_KEY = \"806e255ebb4157320b76a3d474bdf53d\";\r\n//  http://api.openweathermap.org/data/2.5/weather?q=cairo%2Cegypt&appid=e36ed364400282e43250b6c4c0274d44\r\n\r\n\r\nclass App extends Component {\r\n\r\n  state = {\r\n    tempreature:'',\r\n    city:'',\r\n    country:'',\r\n    humidity:'',\r\n    description:'',\r\n    error:''\r\n  }\r\n\r\n  // get the weather data from api by using json\r\n  getWeather = async (e) =>{\r\n\r\n    e.preventDefault();\r\n    const city = e.target.elements.city.value;\r\n    const country = e.target.elements.country.value;\r\n    const api = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city}%2C${country}&appid=${API_KEY}`);\r\n    const data = await api.json();\r\n    console.log(data);\r\n\r\n    if(city && country){\r\n      this.setState({\r\n        tempreature: data.main.temp ,\r\n        city: data.name ,\r\n        country: data.sys.country ,\r\n        humidity: data.main.humidity ,\r\n        description: data.weather[0].description ,\r\n        error:''\r\n      });\r\n    }else{\r\n      this.setState({\r\n        tempreature:'',\r\n        city:'',\r\n        country:'',\r\n        humidity:'',\r\n        description:'',\r\n        error:' Please Inter Correct Data '\r\n      })\r\n    }\r\n    \r\n    \r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"container\">\r\n          <Form getWeather={this.getWeather} />\r\n          <Weather\r\n            tempreature = {this.state.tempreature} \r\n            city= {this.state.city}\r\n            country= {this.state.country}\r\n            humidity= {this.state.humidity}\r\n            description= {this.state.description}\r\n            error= {this.state.error}\r\n          />\r\n        </div> \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}